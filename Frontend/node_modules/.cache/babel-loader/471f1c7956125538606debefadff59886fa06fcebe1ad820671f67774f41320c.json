{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaya\\\\OneDrive\\\\Desktop\\\\Project\\\\Frontend\\\\src\\\\components\\\\Books\\\\AddEditBook.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../../api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEditBook({\n  editMode\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const nav = useNavigate();\n  const [form, setForm] = useState({\n    title: '',\n    author: '',\n    description: '',\n    genre: '',\n    year: ''\n  });\n  useEffect(() => {\n    if (editMode && id) {\n      API.get(`/books/${id}`).then(res => {\n        const b = res.data;\n        setForm({\n          title: b.title,\n          author: b.author,\n          description: b.description,\n          genre: b.genre,\n          year: b.year || ''\n        });\n      });\n    }\n  }, [editMode, id]);\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      if (editMode) {\n        await API.put(`/books/${id}`, form);\n      } else {\n        await API.post('/books', form);\n      }\n      nav('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: editMode ? 'Edit Book' : 'Add Book'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: form.title,\n        onChange: e => setForm({\n          ...form,\n          title: e.target.value\n        }),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: form.author,\n        onChange: e => setForm({\n          ...form,\n          author: e.target.value\n        }),\n        placeholder: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: form.genre,\n        onChange: e => setForm({\n          ...form,\n          genre: e.target.value\n        }),\n        placeholder: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: form.year,\n        onChange: e => setForm({\n          ...form,\n          year: e.target.value\n        }),\n        placeholder: \"Published Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: form.description,\n        onChange: e => setForm({\n          ...form,\n          description: e.target.value\n        }),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editMode ? 'Update' : 'Add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AddEditBook, \"u/4YbMh2q1KUf538iizqRkcvbk8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddEditBook;\nvar _c;\n$RefreshReg$(_c, \"AddEditBook\");","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","useParams","jsxDEV","_jsxDEV","AddEditBook","editMode","_s","id","nav","form","setForm","title","author","description","genre","year","get","then","res","b","data","submit","e","preventDefault","put","post","err","_err$response","_err$response$data","alert","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/Jaya/OneDrive/Desktop/Project/Frontend/src/components/Books/AddEditBook.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport API from '../../api';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport default function AddEditBook({ editMode }) {\r\n  const { id } = useParams();\r\n  const nav = useNavigate();\r\n  const [form, setForm] = useState({ title:'', author:'', description:'', genre:'', year:'' });\r\n\r\n  useEffect(()=> {\r\n    if (editMode && id) {\r\n      API.get(`/books/${id}`).then(res => {\r\n        const b = res.data;\r\n        setForm({ title: b.title, author: b.author, description: b.description, genre: b.genre, year: b.year || '' });\r\n      });\r\n    }\r\n  }, [editMode, id]);\r\n\r\n  const submit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editMode) {\r\n        await API.put(`/books/${id}`, form);\r\n      } else {\r\n        await API.post('/books', form);\r\n      }\r\n      nav('/');\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>{editMode ? 'Edit Book' : 'Add Book'}</h2>\r\n      <form onSubmit={submit}>\r\n        <input value={form.title} onChange={e=>setForm({...form, title: e.target.value})} placeholder=\"Title\" required />\r\n        <input value={form.author} onChange={e=>setForm({...form, author: e.target.value})} placeholder=\"Author\" />\r\n        <input value={form.genre} onChange={e=>setForm({...form, genre: e.target.value})} placeholder=\"Genre\" />\r\n        <input value={form.year} onChange={e=>setForm({...form, year: e.target.value})} placeholder=\"Published Year\" />\r\n        <textarea value={form.description} onChange={e=>setForm({...form, description: e.target.value})} placeholder=\"Description\"></textarea>\r\n        <button type=\"submit\">{editMode ? 'Update' : 'Add'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}